< 미션 1 >
//4주차
//미션 1. 숫자 애너그램 찾기
#include <stdio.h>

int* bubbleSort(int number[]);

int main(void)
{
    // 5자리 숫자 한쌍 입력 받음.
    int input1[5] = {1, 2, 7, 3, 5};
    int input2[5] = {4, 5, 3, 2, 1};

    // 입력받은 배열의 숫자들을 정렬 시켜준다.
    int* result1 = bubbleSort(input1);
    int* result2 = bubbleSort(input2);

    for(int j=0; j < 5; j++)
    {
      printf("%d ", result1[j]);

    }
    printf("\n");
    for(int j=0; j < 5; j++)
    {
      printf("%d ", result2[j]);

    }
    printf("\n");

    // 정렬된 숫자들을 서로 비교해준다.
    for(int i=0; i < 5; i++)
    {
      if(result1[i] != result2[i])
      {
        printf("False\n");
        return 1;
      }
    }
    printf("True\n");

}

int* bubbleSort(int number[])
{
    int temp;
    for (int i=0; i < 5; i++)
    {
      for (int j=0; j < 5 - i - 1; j++ )
      {
        if (number[j] > number[j+1])
        {
          temp = number[j];
          number[j] = number[j+1];
          number[j+1] = temp;
        }
      }
    }

    /*for (int i=0; i < 5; i++)
    {
      printf("%d", number[i]);
    }*/
    return number;
}

< 미션 2 >
//4주차
//미션 2. 친구들과 최단거리 집
#include <stdio.h>
#include <cs50.h>

int calAvg(int input[], int length);
int calMid(int number[], float length);
int Compare(int input[], int length, int var);

int main(void)
{
    int location[5] = {1, 2, 3, 4, 5};
    int length = sizeof(location) / sizeof(int);
    int avg = calAvg(location, length);
    // printf("%d\n", avg);

    int mid = calMid(location, length);
    // printf("%d\n", mid);

    int distAvg = Compare(location, length, avg);
    int distMid = Compare(location, length, mid);
    // printf("%d %d", distAvg, distMid);
    // printf("\n");

    if(distAvg > distMid)
    {
        printf("%d", avg);
    }
    else if((distAvg < distMid))
    {
        printf("%d", mid);
    }
    else
    {
        printf("%d", avg);
    }
    printf("\n");

    return 0;
}

int calAvg(int input[], int length)
{
    int sum = 0;
    for(int i=0; i < length; i++)
    {
        sum = sum + input[i];
    }
    int avg = sum / length;

    return avg;
}

int calMid(int number[], float length)
{
    int temp;
    for (int i=0; i < length; i++)
    {
      for (int j=0; j < length - i - 1; j++ )
      {
        if (number[j] > number[j+1])
        {
          temp = number[j];
          number[j] = number[j+1];
          number[j+1] = temp;
        }
      }
    }

    float a = length / 2;
    int mid = number[(int)(a + 0.5) - 1];

    return mid;
}

int Compare(int input[], int length, int var)
{
    int sum = 0;
    for(int i=0; i < (length); i++)
    {
        if(var >= input[i])
        {
            sum = sum + (var - input[i]);
        }
        else
        {
            sum = sum + (input[i] - var);
        }
        // printf("%d ", sum);
    }
    // printf("\n");
    return sum;
}